'''
<두 용액>

- 문제 -
KOI 부설 과학연구소에서는 많은 종류의 산성 용액과 알칼리성 용액을 보유하고 있다. 
각 용액에는 그 용액의 특성을 나타내는 하나의 정수가 주어져있다.  
산성 용액의 특성값은 1부터 1,000,000,000까지의 양의 정수로 나타내고, 
알칼리성 용액의 특성값은 -1부터 -1,000,000,000까지의 음의 정수로 나타낸다.

같은 양의 두 용액을 혼합한 용액의 특성값은 혼합에 사용된 각 용액의 특성값의 합으로 정의한다. 
이 연구소에서는 같은 양의 두 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들려고 한다. 

예를 들어, 주어진 용액들의 특성값이 [-2, 4, -99, -1, 98]인 경우에는 
특성값이 -99인 용액과 특성값이 98인 용액을 혼합하면 특성값이 -1인 용액을 만들 수 있고, 이 용액이 특성값이 0에 가장 가까운 용액이다. 
참고로, 두 종류의 알칼리성 용액만으로나 혹은 두 종류의 산성 용액만으로 특성값이 0에 가장 가까운 혼합 용액을 만드는 경우도 존재할 수 있다.

산성 용액과 알칼리성 용액의 특성값이 주어졌을 때, 
이 중 두 개의 서로 다른 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들어내는 두 용액을 찾는 프로그램을 작성하시오.

- 입력 -
첫째 줄에는 전체 용액의 수 N이 입력된다. 
N은 2 이상 100,000 이하이다. 

둘째 줄에는 용액의 특성값을 나타내는 N개의 정수가 빈칸을 사이에 두고 주어진다. 
이 수들은 모두 -1,000,000,000 이상 1,000,000,000 이하이다. 
N개의 용액들의 특성값은 모두 다르고, 산성 용액만으로나 알칼리성 용액만으로 입력이 주어지는 경우도 있을 수 있다.

- 출력 -
첫째 줄에 특성값이 0에 가장 가까운 용액을 만들어내는 두 용액의 특성값을 출력한다. 
출력해야 하는 두 용액은 특성값의 오름차순으로 출력한다. 
특성값이 0에 가장 가까운 용액을 만들어내는 경우가 두 개 이상일 경우에는 그 중 아무것이나 하나를 출력한다.

- 예제 입력 1 -
5
-2 4 -99 -1 98

-예제 출력 1 -
-99 98
'''

'''
- 리스트에 용액들의 특성값을 입력합니다.
- 리스트를 오름차순으로 정렬합니다.
- left = 0, right = N - 1로 설정하고 이분탐색을 위해 left < right 일 때까지 while문을 반복합니다.

1. 두 용액의 특성값의 합이 0인 경우

    while문을 break하고 결과를 출력합니다.

2.두 용액의 특성값의 합이 음수인 경우

    음의 특성값의 절댓값이 양의 특성값의 절댓값보다 크기 때문에 
    left += 1 을 통해 두 용액의 특성값의 합이 0에 가까워 질 수 있도록 합니다.

3. 두 용액의 특성값의 합이 양수인 경우

    양의 특성값의 절댓값이 음의 특성값의 절댓값보다 크기 때문에 
    right -= 1를 통해 두 용액의 특성값의 합이 0에 가까워질 수 있도록 합니다.

    만약 두 용액의 특성값의 합의 절댓값이 기존의 answer의 절댓값보다 작은 경우 
    answer 에 새로운 값을 입력하고 al =left, ar = right 을 통해 index를 저장해 줍니다.

    min을 사용하게 되면 -2와 1을 비교했을 때 
    answer 에 -2 가 입력되고 이는 오답이기 때문에 절댓값을 활용합니다.
'''

import sys

def input():
    return sys.stdin.readline().rstrip()

n = int(input())
liquid = [int(x) for x in input().split()]

liquid.sort()       # liquid 정렬

left = 0            # 인덱스를 경계값으로 둔다.
right = n - 1

answer = liquid[left] + liquid[right]

al = left
ar = right

while left < right:                     # left >= right 가 되면 탈출
    tmp = liquid[left] + liquid[right]

    if abs(tmp) < abs(answer):          # 비교해서 더 작은 값이
        answer = tmp                    # answer 가 된다.
        al = left                       # 그 때의 left, right 인덱스 값을 기억
        ar = right
        if answer == 0:                 # 차이가 0 이면
            break                       # 탈출

    if tmp < 0:                         # tmp 가 음수이면
        left += 1                       # left 인덱스에 +1 해주고

    elif tmp >= 0:                      # tmp 가 양수이면
        right -= 1                      # right 인덱스에 -1 해준다.

print(liquid[al], liquid[ar])           # 가장 차이가 작은 순간의 liquid 값을 출력